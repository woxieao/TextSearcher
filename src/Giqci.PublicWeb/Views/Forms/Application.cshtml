@using Giqci.Chapi.Enums.App
@using Giqci.PublicWeb.Extensions
@using Giqci.PublicWeb.Models
@using Newtonsoft.Json
@model Giqci.Chapi.Models.App.Application
@{
    ViewBag.Title = "certificate_application_form".KeyToWord();
}
@section Footer{

    <script type="text/javascript">
        //var app = angular.module("giqci", []);
        function getDate(str) {
            return str ? new Date(str) : null;
        }

        app.controller("GlobalController", [
            '$http', '$scope', '$log', '$location', '$anchorScroll', '$timeout', '$filter', 'alertService', function ($http, $scope, $log, $location, $anchorScroll, $timeout, $filter, alertService) {
                $scope.model = {};
                $scope.model.Application = ObjDecodeToJson(@HtmlExtensions.RawJson(Model));

                $scope.isNewApp = $scope.model.Application.Key == null;

                $scope.additem = function () {
                    $scope.model.Application.ApplicationProducts.push({
                        DescriptionEn: "",
                        Description: "",
                        Brand: "",
                        HSCode: "",
                        Spec: "",
                        CiqCode: "",
                        Manufacturer: "",
                        ManufacturerCountry: "",
                        Package: "",
                        Quantity: 0,
                        ApplicationZCodes: [],
                        ProductItemList: [],
                        addItemByBatchNo: [
                            {
                                BatchNo: ""
                            }
                        ],
                        addZcodeItem: [
                            {
                                ZCodeStart: "",
                                ZCodeEnd: ""
                            }
                        ],
                        HandlerType: 1
                    });
                };

                $scope.CustomerSubmitButton = $giqci.KeyToWord("submit");
                $scope.CustomerenableDisableButton = false;
                $scope.dataInit = function () {
                    $scope.model.Application.InspectionDate = $filter('date')($scope.model.Application.InspectionDate, 'yyyy/MM/dd');
                    for (var i = 0; i < $scope.model.Application.ApplicationProducts.length; i++) {
                        $scope.model.Application.ApplicationProducts[i].addItemByBatchNo = "";
                        $scope.model.Application.ApplicationProducts[i].addItemByBatchNo.BatchNo = "";
                        $scope.model.Application.ApplicationProducts[i].addZcodeItem = { ZCodeStart: "", ZCodeEnd:""};
                        for (var j = 0; j < $scope.model.Application.ApplicationProducts[i].ApplicationZCodes.length; j++) {
                            $scope.model.Application.ApplicationProducts[i].ApplicationZCodes[j].HtmlEdit = 0;
                        }
                    }
                };
                if ($scope.model.Application.Key == null) {
                    $scope.model.Application.TradeType = "4";
                    $scope.model.Application.ShippingMethod = 1;
                }

                $scope.isEdit = $scope.model.Application.Key != null;
                $scope.dataInit();
                $scope.errors = [];

                if ($scope.model.Application.Key != null) {
                    window.onbeforeunload = function () {
                        return $giqci.KeyToWord("about_to_leave_this_page");
                    }
                    $scope.acceptshow = false;
                    $scope.appshow = true;
                    $("#appliction-form").show();
                } else {
                  $scope.acceptshow = true;
                    $scope.appshow = false;
                    $("#accept-form").hide();
                };
                $(function () {
                    $('.datetimepicker').datetimepicker({
                        language: 'zh-CN',
                        format: 'yyyy/mm/dd',
                        autoclose: true,
                        minView: "month",
                        todayBtn: true,
                    }).on("hide",
                        function () {
                            var $this = $(this);
                            var _this = this;
                            $scope.$apply(function () {
                                $scope[$this.attr('ng-model')] = _this.value;
                            });
                        });
                });

                $scope.listFilter = function (item) {
                    return item.HandlerType === 1 || item.HandlerType === 0 || item.HandlerType===2;
                };

                $scope.addContainerInfo = function () {
                    $scope.model.Application.ContainerInfos
                        .push({ ContainerNumber: "", SealNumber: "", HandlerType: 1 });
                };
                $scope.removeContainerInfo = function (_object) {
                    _object.HandlerType = -1;
                };
                $scope.merchantProductList = { CiqCode: 0, Description: "" };
                $scope.removeitem = function (_object) {
                    _object.HandlerType = -1;
                    for (var j = 0; j < _object.ProductItemList.length; j++) {
                        _object.ProductItemList[j].HandlerType = -1;
                    }
                    for (var j = 0; j < _object.ApplicationZCodes.length; j++) {
                        _object.ApplicationZCodes[j].HandlerType = -1;
                    }
                };
                $scope.AppCache = null;
                $scope.GetAppCache = function () {
                    $giqci.post('/api/forms/GetAppCache').success(function (response) {
                        if (response.flag) {
                            // $scope.isNewApp = true;
                            $scope.AppCache = response.app;
                        }
                    }, $scope);
                }
                if ($scope.isNewApp) {
                    $scope.GetAppCache();
                }

                $scope.RemoveAppCache = function (isOverride) {
                    $scope.accept();
                    if (isOverride) {
                        $scope.model.Application = null;
                        $scope.model.Application = $scope.AppCache;
                        $scope.dataInit();
                    }
                    $giqci.post('/api/forms/RemoveAppCache'
                    ).success(function (response) {
                        layer.msg($giqci.KeyToWord("read_temporary_app_success"), { icon: 6, time: 6000 });
                    }, $scope);
                }
                $scope.isSaveingCache = false;
                $scope.SaveAppCache = function () {
                    $scope.isSaveingCache = true;
                    $giqci.post('/api/forms/SaveAppCache',
                        $scope.model.Application).success(function (result) {
                            layer.msg($giqci.KeyToWord("temporary_storage_success_msg"), { icon: 6 }, function () {
                                $scope.isSaveingCache = false;
                                $scope.$apply();
                            });
                        }, $scope);
                    
                }
                $scope.getGoodsList = function () {
                    $giqci.post('/api/goods/getproductlist').success(function (response) {
                        $scope.merchantProductList = response.result;
                    }, $scope);
                }
                $scope.getGoodsList();
                $scope.getCustomProductList = function () {
                    $giqci.post('/api/goods/getcustomproductlist').success(function (response) {
                        $scope.customProductList = response.result;
                    }, $scope);
                };
                $scope.getCustomProductList();

                $scope.selectProduct = function (_selected, _object) {
                    if (_selected != null) {
                        _object.DescriptionEn = _selected.DescriptionEn;
                        _object.IsEditDescriptionEn = _selected.DescriptionEn == "" || _selected.DescriptionEn == null;// !_selected.IsApproved;
                        _object.Description = _selected.Description;
                        _object.Brand = _selected.Brand;
                        _object.HSCode = _selected.HsCode;
                        _object.Spec = _selected.Spec;
                        _object.CiqCode = _selected.CiqCode;
                        _object.Manufacturer = _selected.Manufacturer;
                        _object.ManufacturerCountry = _selected.ManufacturerCountry;
                        _object.Package = _selected.Package;
                        _object.ProductItemList = [];
                        _object.ApplicationZCodes = [];
                        _object.CustomProductId = _selected.CustomProductId;
                    } else {
                        _object.DescriptionEn = "";
                        _object.Description = "";
                        _object.Brand = "";
                        _object.HSCode = "";
                        _object.Spec = "";
                        _object.CiqCode = "";
                        _object.Manufacturer = "";
                        _object.ManufacturerCountry = "036";
                        _object.Package = "";
                        _object.ProductItemList = [];
                        _object.ApplicationZCodes = [];
                        _object.CustomProductId = 0;
                        _object.isEditInputDefault = true;
                    }
                    _object.Selected = _selected;
                };
                $scope.addItemByBatchNo = function (_object, _index) {
                    if (_object.addItemByBatchNo.BatchNo == null || _object.addItemByBatchNo.BatchNo == "") {
                        document.getElementsByName("addItemByBatchNoString_" + _index)[0].setAttribute("placeholder",$giqci.KeyToWord("please_enter_a_batch_number") );
                        document.getElementsByName("addItemByBatchNoDate_" + _index)[0].setAttribute("placeholder", $giqci.KeyToWord("please_enter_a_shelf_life"));
                        return;
                    }
                    document.getElementsByName("addItemByBatchNoString_" + _index)[0].setAttribute("placeholder",$giqci.KeyToWord("batch_number") );
                    document.getElementsByName("addItemByBatchNoDate_" + _index)[0].setAttribute("placeholder",$giqci.KeyToWord("shelf_life"));
                    _object.ProductItemList.push({
                        BatchNo: _object.addItemByBatchNo.BatchNo == null ? " " : _object.addItemByBatchNo.BatchNo,
                        HandlerType: 1
                    });
                    _object.addItemByBatchNo.BatchNo = "";
                };

                $scope.removeItemByBatchNo = function (_object) {
                    _object.HandlerType = -1;
                };

                $scope.myKeyupStart = function (e,_index) {
                    if(e.keyCode==13){
                        document.getElementsByName("zCodeEnd"+_index)[0].focus();
                    }
                };

                $scope.myKeyupEnd = function (e, _object, _index) {
                    if (e.keyCode == 13) {
                        $scope.validAddzcodeItem(_object,_index);
                        document.getElementsByName("zCodeEnd" + _index)[0].blur();
                        document.getElementsByName("zCodeStart" + _index)[0].focus();
                    }
                };

                $scope.zcodeBlurStart = function (e) {
                    //空方法，不能去掉
                }

                $scope.zcodeBlurEnd = function (e) {
                    //空方法，不能去掉
                };


                //添加真知码自定义指令的验证方法
                $scope.zCodeValidateStart = function (value,item,bool,_index) {
                    //首码输入框曾经获取过焦点，判断首码是否有值
                    if (item.addZcodeItem.hasOwnProperty("ZCodeStart")) {
                        if (item.addZcodeItem.ZCodeStart == "" || item.addZcodeItem.ZCodeStart == undefined) {
                            if (item.addZcodeItem.hasOwnProperty("ZCodeEnd") &&
                                item.addZcodeItem.ZCodeEnd != "" && item.addZcodeItem.ZCodeEnd != undefined) {
                                //尾码不为空，给出提示
                                return $giqci.KeyToWord("enter_zcode_head_code_msg");
                            } else {
                                return false;//两个输入框都没填，验证通过
                            }
                        } else if ((value+"").length == 16) {
                            //首码不为空，判断首码和尾码
                            if (bool) {
                                $scope.addZcodeItem(item,_index);
                                return false;
                            } else {
                                var input = document.getElementsByName("zCodeEnd"+_index);
                                input[0].focus();
                                $scope.zCodeValidateEnd(item.addZcodeItem.ZCodeEnd, item, true,_index);
                            }
                        } else {
                            return $giqci.KeyToWord("enter_zcode_head_code_msg");
                        }
                    } else if (item.addZcodeItem.hasOwnProperty("ZCodeEnd") && bool) {
                        return $giqci.KeyToWord("enter_zcode_head_code_msg");
                    } else {
                        return false;
                    }
                };

                //尾码验证
                $scope.zCodeValidateEnd = function (value, item, bool,_index) {
                    //尾码输入框曾经获取过焦点，判断尾码是否有值
                    if (item.addZcodeItem.hasOwnProperty("ZCodeEnd")) {
                        if (item.addZcodeItem.ZCodeEnd == "" || item.addZcodeItem.ZCodeEnd == undefined) {
                            if (item.addZcodeItem.hasOwnProperty("ZCodeStart") &&
                                item.addZcodeItem.ZCodeStart != "" && item.addZcodeItem.ZCodeStart != undefined) {
                                return $giqci.KeyToWord("enter_zcode_tail_code_msg");
                            } else {
                                return false;//首码尾码都没有填写，验证通过
                            }
                        } else if ((value+"").length == 16) {
                            if (bool) {
                                $scope.addZcodeItem(item,_index);
                                return false;
                            } else {
                                var input = document.getElementsByName("zCodeStart"+_index);
                                input[0].focus();
                                $scope.zCodeValidateStart(item.addZcodeItem.ZCodeStart, item, true,_index);
                            }
                        } else {
                            return $giqci.KeyToWord("enter_zcode_tail_code_msg");
                        }
                    } else if (item.addZcodeItem.hasOwnProperty("ZCodeStart") && bool) {
                        return $giqci.KeyToWord("enter_zcode_tail_code_msg");
                    } else {
                        return false;
                    }
                };

                //添加真知码操作（需在验证通过后）
                $scope.addZcodeItem = function (_object,_index) {
                    document.getElementsByName("zCodeStart"+_index)[0].setAttribute("placeholder",$giqci.KeyToWord("head_code") );
                    document.getElementsByName("zCodeEnd"+_index)[0].setAttribute("placeholder", $giqci.KeyToWord("tail_code"));
                    _object.ApplicationZCodes.push({
                        ZCodeStart: _object.addZcodeItem.ZCodeStart,
                        ZCodeEnd: _object.addZcodeItem.ZCodeEnd,
                        HandlerType: 1,
                        HtmlEdit: 0
                    });
                    _object.addZcodeItem.ZCodeStart = "";
                    _object.addZcodeItem.ZCodeEnd = "";
                };
                $scope.removeZcodeItem = function (_object) {
                    _object.HandlerType = -1;
                    layer.closeAll();
                };
                $scope.editZcodeItem = function (_object) {
                    _object.HtmlEdit = 1;
                    _object.HandlerType = 2;
                };

                //已成功添加真知码，再次编辑时的验证
                $scope.validZcodeItem = function (_object) {
                    //空方法，不能去掉
                };

                //已成功添加真知码，再次编辑时的首码验证
                $scope.validZcodeStart = function (_object) {
                    //真知码为空，不验证
                    var noZcode = _object.ZCodeStart == "" && _object.ZCodeEnd == "";
                    //首码尾码都不为空，且都够16位，验证通过
                    var pass = _object.ZCodeStart.length === 16 && _object.ZCodeEnd.length === 16;
                    if (pass) {
                        _object.HtmlEdit = 0;
                        layer.closeAll();
                        return false;
                    } else if(noZcode){
                        $scope.removeZcodeItem(_object);
                        layer.closeAll();
                    } else if (_object.ZCodeStart.length !== 16) {
                        return $giqci.KeyToWord("enter_zcode_head_code_msg") ;
                    }
                };

                //已成功添加真知码，再次编辑时的尾码验证
                $scope.validZcodeEnd = function (_object) {
                    //真知码为空，不验证
                    var noZcode = _object.ZCodeStart == "" && _object.ZCodeEnd == "";
                    //首码尾码都不为空，且都够16位，验证通过
                    var pass = _object.ZCodeStart.length === 16 && _object.ZCodeEnd.length === 16;
                    if (pass) {
                        _object.HtmlEdit = 0;
                        layer.closeAll();
                        return false;
                    }else if(noZcode){
                        $scope.removeZcodeItem(_object);
                        layer.closeAll();
                    } else if (_object.ZCodeEnd.length !== 16) {
                        return $giqci.KeyToWord("enter_zcode_tail_code_msg");
                    }
                };

                //添加真知码时的验证
                $scope.validAddzcodeItem = function (_object,_index) {
                    //真知码为空，不验证
                    var noZcode = ((_object.addZcodeItem.ZCodeEnd == null) || (_object.addZcodeItem.ZCodeEnd == ""))
                        && ((_object.addZcodeItem.ZCodeStart == null) || (_object.addZcodeItem.ZCodeStart == ""));
                    //首码尾码都不为空，且都够16位，验证通过
                    var pass = ((_object.addZcodeItem.ZCodeEnd != null) || (_object.addZcodeItem.ZCodeEnd != "")) &&
                        ((_object.addZcodeItem.ZCodeStart != null) || (_object.addZcodeItem.ZCodeStart !="")) &&
                        (_object.addZcodeItem.ZCodeStart != null && _object.addZcodeItem.ZCodeStart.length === 16) &&
                        (_object.addZcodeItem.ZCodeEnd != null && _object.addZcodeItem.ZCodeEnd.length === 16);
                    if (pass) {
                        $scope.addZcodeItem(_object,_index);
                        layer.closeAll();
                        return;
                    } else if (noZcode) {
                        return;
                    }else {
                        return;
                    }
                };

                //再次编辑真知码，点击确定按钮
                $scope.submitZcodeItem = function (_object,index) {
                    if (_object.ZCodeStart == null || _object.ZCodeStart == "" || _object.ZCodeStart.length !== 16) {
                        document.getElementsByName("zCodeEditStart"+index)[0].focus();
                        $scope.validZcodeStart(_object);
                        return;
                    }
                    if (_object.ZCodeEnd == null || _object.ZCodeEnd == "" || _object.ZCodeEnd.length !== 16) {
                        document.getElementsByName("zCodeEditEnd" + index)[0].focus();
                        $scope.validZcodeEnd(_object);
                        return;
                    }
                    _object.HtmlEdit = 0;
                };

                $scope.Product = null;

                $scope.selectGoods = function (index) {
                    $giqci.post('/api/goods/searchproduct',
                    { ciqCode: $scope.merchantProductList[index].CiqCode }).success(function (data) {
                        var product = data.result;
                        $scope.model.Application.ApplicationProducts.push({
                            CiqCode: product.CiqCode,
                            HSCode: product.HSCode,
                            Description: product.Description,
                            DescriptionEn: product.DescriptionEn,
                            Spec: product.Spec,
                            Brand: product.Brand,
                            Manufacturer: product.Manufacturer,
                            ManufacturerCountry: product.ManufacturerCountry,
                            Package: product.Package
                        });
                    }, $scope);
                }
                $scope.itemClickHandler = function (event) {
                    var currentElement = event.target;
                    //console.log(currentElement);
                    $(currentElement).datetimepicker({
                        language: 'zh-CN',
                        format: 'yyyy/mm/dd',
                        autoclose: true,
                        minView: "month",
                        todayBtn: true,
                    }).on("hide",
                        function () {
                            var $this = $(this);
                            var _this = this;
                            $scope.$apply(function () {
                                $scope[$this.attr('ng-model')] = _this.value;
                            });
                        });
                };
                $scope.addItemByBatchNoClickHandler = function (event,_object,_index) {
                    var currentElement = event.target;
                    $(currentElement).datetimepicker({
                        format: 'dd M yyyy',
                        autoclose: true,
                        minView: "month",
                        todayBtn: true,
                    }).on("hide",
                        function () {
                            var $this = $(this);
                            var _this = this;
                            $scope.addItemByBatchNo(_object, _index);
                            $scope.$apply(function () {
                                $scope[$this.attr('ng-model')] = _this.value;
                            });
                        });
                };
                $scope.countryClickHandler = function (event) {
                    var currentElement = event.target;
                    $(currentElement).select2({ theme: "bootstrap", width: 'resolve' });
                };
                $scope.accept = function () {
                    window.onbeforeunload = function () {
                        return $giqci.KeyToWord("about_to_leave_this_page");
                    }
                    $scope.acceptshow = false;
                    $scope.appshow = true;
                    $("#accept-form").hide();
                    $("#appliction-form").show();
                };

                $scope.check_type_c102 = function () {
                    if ($scope.model.Application.C102) {
                        $scope.show_c_102 = true;
                    } else {
                        $scope.show_c_102 = false;
                    }
                };

                $scope.removeExample = function (_object) {
                    _object.HandlerType = -1;
                };
                $scope.check_type_c102();

                /*login model*/
                $scope.login = {
                    result: true,
                    error: ""
                };
                $scope.user = {
                    email: "",
                    password: ""
                }
                $scope.submitLoginForm = function () {
                    $giqci.post('/api/account/login', $scope.user).then(function (response) {
                        if (response.data.result) {
                            $('#form-login').modal('hide');
                        } else {
                            //console.log(response.data);
                            $scope.login.result = response.data.result;
                            $scope.login.error = response.data.message;
                        }
                    }, $scope);
                };

                $scope.submit = function (isValid) {
                    if (isValid) {
                        if ($scope.model.Application.ShippingMethod == 1) {
                            $scope.model.Application.ContainerInfos = [];
                        }
                        for (var i = 0; i < $scope.model.Application.ApplicationProducts.length; i++) {
                            $scope.model.Application.ApplicationProducts[i].Index = i;
                            for (var j = 0; j < $scope.model.Application.ApplicationProducts[i].ProductItemList.length; j++) {
                                $scope.model.Application.ApplicationProducts[i].ProductItemList[j].ManufacturerDate = $filter('date')($scope.model.Application.ApplicationProducts[i].ProductItemList[j].ManufacturerDate, 'yyyy/MM/dd');
                                $scope.model.Application.ApplicationProducts[i].ProductItemList[j].ExpiryDate = $filter('date')($scope.model.Application.ApplicationProducts[i].ProductItemList[j].ExpiryDate, 'yyyy/MM/dd');
                            }
                            if (!$scope.show_c_102) {
                                $scope.model.Application.ApplicationProducts[i].C102 = false;
                                $scope.model.Application.ApplicationProducts[i].C102Comment = "";
                            }
                        }
                        $scope.submitApp = true;
                        $giqci.post('/api/forms/app', $scope.model.Application).then(function (response) {
                            if (response.data.isLogin) {
                                if (response.data.errors) {
                                    //$scope.errors = response.data.errors;
                                    layer.alert(response.data.errors[0], function (index) {
                                        layer.close(index);
                                    });
                                    //$location.hash("h1");
                                    //$anchorScroll();
                                    $scope.dataInit();
                                } else {
                                    $scope.resultMessage = response.data.isNew ? $giqci.KeyToWord("certificate_application_success_msg") + response.data.appkey :$giqci.KeyToWord("data_update_success") ;
                                }
                            } else {
                                $scope.login = { result: true, error: "" };
                                $scope.user = { email: "", password: "" }
                                $('#form-login').modal();
                            }
                            $scope.submitApp = false;
                        }, $scope
                            //,function (response) {
                            //    $scope.errors = ["服务器异常,请重试"];
                            //    $location.hash("h1");
                            //    $anchorScroll();
                            //    $scope.submitApp = false;
                            //    $log.warn(response);
                            //}
                        ).error(function () {
                            layer.alert($giqci.KeyToWord("server_exception"));
                            $scope.$apply(function () {
                                $scope.submitApp = false;
                            });
                        });
                    } else {
                        $scope.submitApp = false;
                    }
                    
                };

                $scope.updateClock = function () {
                    $giqci.post('/api/account/heartbeat').then(function () { }, $scope);
                };
                setInterval(function () {
                    $scope.$apply($scope.updateClock);
                }, 300000);

                $scope.updateClock();

                $scope.loadCountriesDict = null;
                $scope.loadCountries = function () {
                    $giqci.get("/api/dict/countries", { params: { 'code': "" } }).success(function (data) {
                        $scope.loadCountriesDict = data.items;
                    }, $scope);
                };
                $scope.loadCountries();
                $("#accept-form").show();

                //merchant list
                $scope.merchantList = function () {
                    $("#form-merchant-list").modal("show");
                };

                $scope.loadMerchantInfo = null;
                $scope.loadMerchant = function () {
                    $giqci.post("/api/UserProfile/GetProfileList").success(function (data) {
                        $scope.loadMerchantInfo = data.result;
                    }, $scope);
                };
                $scope.loadMerchant();
                $scope.selectExporter = function (_object) {
                    if (_object) {
                        $scope.model.Application.Exporter = _object.UserName;
                        $scope.model.Application.ExporterAddr = _object.UserAddress;
                        $scope.model.Application.ExporterContact = _object.UserContact;
                        $scope.model.Application.ExporterPhone = _object.UserPhone;
                    } else {
                        $scope.model.Application.Exporter = "";
                        $scope.model.Application.ExporterAddr = "";
                        $scope.model.Application.ExporterContact = "";
                        $scope.model.Application.ExporterPhone = "";
                    }
                };
                $scope.selectImporter = function (_object) {
                    if (_object) {
                        $scope.model.Application.Importer = _object.UserName;
                        $scope.model.Application.ImporterAddr = _object.UserAddress;
                        $scope.model.Application.ImporterContact = _object.UserContact;
                        $scope.model.Application.ImporterPhone = _object.UserPhone;
                    } else {
                        $scope.model.Application.Importer = "";
                        $scope.model.Application.ImporterAddr = "";
                        $scope.model.Application.ImporterContact = "";
                        $scope.model.Application.ImporterPhone = "";
                    }
                };
                $scope.selectImBroker = function (_object) {
                    if (_object) {
                        $scope.model.Application.ImBroker = _object.UserName;
                        $scope.model.Application.ImBrokerAddr = _object.UserAddress;
                        $scope.model.Application.ImBrokerContact = _object.UserContact;
                        $scope.model.Application.ImBrokerPhone = _object.UserPhone;
                    } else {
                        $scope.model.Application.ImBroker = "";
                        $scope.model.Application.ImBrokerAddr = "";
                        $scope.model.Application.ImBrokerContact = "";
                        $scope.model.Application.ImBrokerPhone = "";
                    }
                };
                $scope.addMerchant = function () {
                    $(".merchant-add-title").html($giqci.KeyToWord("add_common_merchant_information"));
                    $scope.dialogModelMerchant = {
                        UserName: "",
                        UserAddress: "",
                        UserContact: "",
                        UserPhone: ""
                    };
                    $("#merchant-add-form").modal("show");
                    $("#form-merchant-list").modal("hide");
                };

                $('#merchant-add-form').on('hidden.bs.modal', function (e) {
                    layer.closeAll();
                })

                $scope.MerchantHasSaved = false;
                $scope.submitAddMerchant = function (isValid) {
                    if (isValid) {
                        $scope.MerchantHasSaved = true;
                        var _url = "";
                        if ($scope.dialogModelMerchant.Id == null) {
                            _url = '/api/UserProfile/AddProfile';
                        } else {
                            _url = '/api/UserProfile/UpdateProfile';
                        }
                        $giqci.post(_url,
                        { userProfile: $scope.dialogModelMerchant }).success(function (data) {
                            if (data.flag) {
                                layer.msg($giqci.KeyToWord("save_success"), { icon: 6 }, function () {
                                    $scope.MerchantHasSaved = false;
                                    $scope.loadMerchant();
                                    $("#merchant-add-form").modal("hide");
                                    $("#form-merchant-list").modal("show");
                                });
                            } else {
                                $scope.MerchantHasSaved = false;
                                var _errormsg = '';
                                for (var i = data.errorMsg.length; i > 0; i--) {
                                    _errormsg += data.errorMsg[i - 1] + "\r\n";
                                }
                                layer.alert(_errormsg || $giqci.KeyToWord("unknown_error"), function (index) {
                                    layer.close(index);
                                });
                            }
                        }, $scope);
                    } else {
                        $scope.MerchantHasSaved = false;
                    }
                };

                $scope.editMerchant = function (_id) {
                    $giqci.post('/api/UserProfile/GetProfileDeatil',
                    {
                        ProfileId: _id
                    }).success(function (data) {
                        $(".merchant-add-title").html($giqci.KeyToWord("edit_common_merchant_information"));
                        $("#merchant-add-form").modal("show");
                        $("#form-merchant-list").modal("hide");
                        $scope.dialogModelMerchant = data.result;
                    }, $scope);
                };
                $scope.removeMerchant = function (_object) {
                    layer.confirm($giqci.KeyToWord("delete_common_merchant_msg"), function (l) {
                        $giqci.post('/api/UserProfile/RemoveProfile',
                            { ProfileId: _object.Id }).success(function (data) {
                                if (data.flag) {
                                    layer.msg($giqci.KeyToWord("delete_success"), { icon: 6, time: 1000 }, function () {
                                        $scope.loadMerchant();
                                        //$("#merchant-add").modal("hide");
                                    });
                                } else {
                                    layer.alert(data.msg ||$giqci.KeyToWord("delete_failed") , function (index) {
                                        layer.close(index);
                                    });
                                }
                            }, $scope); layer.close(l);
                    });
                };
                //upload example
                $scope.UploadExample = function () {
                    $('#uploadForm').ajaxSubmit({
                        type: "post",
                        url: $giqci.getLanUrl("/api/forms/savefile"),
                        success: function (giqciData) {
                            var data = giqciData.data;
                            if (data.Flag) {
                                $scope.model.Application.ExampleCertList.push({ CertFilePath: data.FileFullPath, HandlerType: 1 });
                                $scope.$apply();
                            } else {
                               layer. alert(data.Msg);
                            }
                        }
                    });
                };
                $scope.showProductList = function () {
                    $(".form-add-custom-product-title").html($giqci.KeyToWord("list_of_goods"));
                    $("#form-product").modal("show");
                    $("#form-add-custom-product").modal("hide");
                    $("#form-add-goods-product").modal("hide");
                    layer.closeAll();
                };
                var _modalEditMerchantProduct = document.getElementById("form-add-custom-product");
                angular.element(_modalEditMerchantProduct).on('hide.bs.modal', function () {
                    $scope.CustomDialogModel = null;
                });
                $scope.addCustomProduct = function () {
                    $(".form-add-custom-product-title").html($giqci.KeyToWord("add_customer_goods"));
                    $("#form-product").modal("hide");
                    $("#form-add-custom-product").modal("show");
                    $("#CustomDialogModelHsCode").next().find("span.select2-selection__rendered").html("");
                    $scope.CustomDialogModel = { HsCode: '', ManufacturerCountry: "036" };
                };

                $("#form-add-custom-product").on('hidden.bs.modal', function (e) {
                    layer.closeAll();
                })

                $scope.addGoodsProduct = function () {
                    $("#form-product").modal("hide");
                    $("#form-add-goods-product").modal("show");
                    $scope.DialogProductCiqCode = "";
                    $scope.dialogProductList = null;
                };
                $scope.submitAddCustomProduct = function (isValid) {
                    if (isValid) {
                        var _btnsubmitAddCustomProduct = document.getElementById("submitAddCustomProduct");
                        angular.element(_btnsubmitAddCustomProduct).attr("disabled", true);
                        $giqci.post('/api/goods/addcustomproduct', $scope.CustomDialogModel).success(function (response) {
                            if (response.flag) {
                                $scope.getCustomProductList();
                                layer.msg($giqci.KeyToWord("submit_successfully"), { icon: 6 }, function () {
                                    $scope.showProductList();
                                    angular.element(_btnsubmitAddCustomProduct).attr("disabled", false);
                                });
                            } else {
                                angular.element(_btnsubmitAddCustomProduct).attr("disabled", false);
                                layer.alert(response.msg ||$giqci.KeyToWord("unknown_error") );
                            }
                        }, $scope);
                    }
                };
                $scope.submitAddGoodsProduct = function () {
                    $giqci.post('/api/goods/addcustomproduct', $scope.CustomDialogModel).success(function (response) {
                        if (response.flag) {
                            $scope.getGoodsList();
                            layer.msg($giqci.KeyToWord("submit_successfully"),{icon:6},function(l) {
                                $scope.showProductList();
                            });
                        }
                        var _tipType = response.flag ? "success" : "danger";
                        layer.alert(response.msg ||$giqci.KeyToWord("unknown_error") );
                    }, $scope);
                };

                $scope.alreadySearchApp = false;
                $scope.getDialogProductList = function (isValid) {
                    if (isValid) {
                        $scope.alreadySearchApp = true;
                        $giqci.post('/api/goods/searchproduct',
                        { ciqCode: $scope.DialogProductCiqCode }).success(function (data) {
                            if (data.result == null) {
                                $scope.dialogProductList = null;
                                layer.alert($giqci.KeyToWord("the_record_number_does_not_exist"));
                                $scope.alreadySearchApp = false;
                            } else {
                                $scope.dialogProductList = data.result;
                                $scope.alreadySearchApp = false;
                            }
                        }, $scope);
                    } else {
                        $scope.alreadySearchApp = false;
                    }
                };
                $scope.addDialogGoodsProduct = function () {
                    layer.confirm($giqci.KeyToWord("add_product_msg"), function (l) {
                        if ($scope.dialogProductList != null) {
                            $giqci.post('/api/goods/addproduct',
                            { ciqCode: $scope.dialogProductList.CiqCode }).success(function (data) {
                                if (data.result) {
                                    $scope.getGoodsList();
                                    layer.msg($giqci.KeyToWord("added_successfully"), { icon: 6 }, function () { $scope.showProductList(); });
                                } else {
                                    layer.alert(data.msg ||$giqci.KeyToWord("unknown_error") );
                                }
                            }, $scope);
                        }
                        layer.close(l);
                    });
                };
                $scope.removeMerchantProductId = function (Id, index) {
                    layer.confirm($giqci.KeyToWord("delete_product_msg"), function (l) {
                        $giqci.post('/api/goods/deletecustomproduct', { id: Id }).then(function (response) {
                            if (response.data.flag) {
                                $scope.getCustomProductList();
                            }
                        }, $scope);
                        layer.close(l);
                    });
                };
                $scope.removeMerchantProductCiq = function (ciqCode, index) {
                    layer.confirm($giqci.KeyToWord("delete_product_msg"), function (l) {
                        $giqci.post('/api/goods/delete', { ciqCode: ciqCode }).then(function (response) {
                            if (response.data.result) {
                                $scope.getGoodsList();
                            }
                        }, $scope);
                        layer.close(l);
                    });
                };

                $scope.editMerchantProduct = function (_object) {
                    $(".form-add-custom-product-title").html($giqci.KeyToWord("edit_custom_product"));
                    $scope.CustomDialogModel = _object;
                    $("#CustomDialogModelHsCode").next().find("span.select2-selection__rendered").html("");
                    $("#form-add-custom-product").modal("show");
                    $("#form-product").modal("hide");
                };

                $scope.allowTypeList = ObjDecodeToJson(@HtmlExtensions.RawJson(Config.Filer.AllowTypeList));
                $scope.allowType = '';
                for (var i = 0; i < $scope.allowTypeList.length; i++) {
                    if (i == $scope.allowTypeList.length - 1) {
                        $scope.allowType += "." + $scope.allowTypeList[i];
                    } else {
                        $scope.allowType += "." + $scope.allowTypeList[i] + ',';
                    }
                }
                //console.log($scope.allowType);


                $("#form-change-product").on('hide.bs.modal', function () {
                    layer.closeAll();
                });


                //change product
                $scope.CiqCode = '';
                $scope.changeProductList = false;
                $scope.isSearch = false;
                $scope.changeProductSubmitApp = false;
                $scope.getproductlist = function (isValid) {
                    if (isValid) {
                        $scope.changeProductSubmitApp = true;
                        $giqci.post('/api/goods/searchproduct', { ciqCode: $scope.CiqCode })
                        .success(function (data) {
                            if (data.result == null) {
                                $scope.Product = null;
                                layer.alert($giqci.KeyToWord("the_record_number_does_not_exist"), function (index) {
                                    layer.close(index);
                                });
                            } else {
                                $scope.Product = data.result;
                                $scope.changeProductList = true;
                                $scope.isSearch = true;
                            }
                            $scope.changeProductSubmitApp = false;
                        }, $scope);
                    } else {
                        $scope.changeProductSubmitApp = false;
                    }
                };

                var _modal = document.getElementById("form-change-product");
                var _form_product = document.getElementById("form-product");
                var _form_submitAddCustomProduct = document.getElementById("submitAddCustomProduct");
                $scope.changeMerchantProduct = function (index) {
                    $scope.changeProductList = false;
                    $scope.CiqCode = '';
                    angular.element(_modal).modal("show");
                    angular.element(_form_product).modal("hide");
                    $scope.ChangeProductDialogModel = CallByValue($scope.customProductList[index]);
                };
                $scope.submitChangeProduct = function (_customProductId, _ciqCode) {
                    angular.element(_form_submitAddCustomProduct).attr("disabled", true);
                    if (false === $scope.isSearch || _customProductId == null || _ciqCode == null) {
                        layer.alert($giqci.KeyToWord("search_record_commodity_msg"), function (index) {
                            layer.close(index);
                            angular.element(_form_submitAddCustomProduct).attr("disabled", false);
                        });
                        return;
                    };
                    $giqci.post('/api/goods/convertproduct/' + _customProductId + '/' + _ciqCode,
                        { enName: $scope.ChangeProductDialogModel.DescriptionEn }
                    ).success(function (response) {
                        $scope.isSearch = false;
                        if (response.flag) {
                            layer.msg($giqci.KeyToWord("convert_success_msg"), { icon: 6 }, function () {
                                $scope.getGoodsList();
                                $scope.getCustomProductList();
                                angular.element(_form_submitAddCustomProduct).attr("disabled", false);
                                angular.element(_modal).modal("hide");
                            });
                        } else {
                            angular.element(_form_submitAddCustomProduct).attr("disabled", false);
                            layer.alert(response.msg, function (index) {
                                layer.close(index);
                            });
                        }
                    }, $scope);
                };
                angular.element(_modal).on('hide.bs.modal', function () {
                    $scope.isSearch = false;
                });
            }
        ]);

        function CheckIsUpload() {
            var flag = $('#isUpload').val() * 1 === 1;
            $('#isUpload').val(0);
            return flag;
        }

        function print() {
            //var printWindow = window.open();
            //printWindow.document.write("<style type='text/css'>body {margin: 0px}</style>" + $("#print").html());
            //printWindow.print();
            $("#print").jqprint();
        }

        function ChangeUploadStatus() {
            $('#isUpload').val(1);
        }
    </script>
}

<div ng-controller="GlobalController" class="container">
    <div ng-show="acceptshow" id="accept-form" style="display: none; margin: 20px 0 0 0;">
        <form class="form-horizontal">
            <div class="form-group">
                <div class="col-sm-10 col-sm-offset-1">
                    <div class="termblock">
                        <h5>
                            委托检验申请单/协议书合同条款<br>
                            Appointment of Independent Inspection Service Application Form/Terms & Condition of Appointment
                        </h5>
                        <p>
                            一、环球质量检验公正有限公司（以下简称检验方）接受委托方书面检验委托。委托检验申请单（以下简称委托单）作为本协议的附件。本协议委托方代表人在线确认点击本条款，将视作同意执行本合约条款自动生效。<br>
                            1, Global Independent QC and Inspection Pty Ltd (GIQCI) accepts a written inspection service appointment from an applicant (Client). The Appointment of Independent Inspection & Assurance Application Form (Application Form) becomes the Agreement between GIQCI and the Client. The Agreement shall be effective automatically when the Client or a delegate of the Client accepts terms & condition of the Agreement by clicking on-line on the confirmation button.
                        </p>
                        <p>
                            二、委托方应如实填写委托单，如有必要，还应根据检验方的要求提供必要的单据及相关资料。<br>
                            2, The Application Form must be completed in full and the Client must complete the Application Form honestly and with care. When necessary, additional documents and information may be required from the Client.
                        </p>
                        <p>
                            三、检验方按委托方在委托单上填明的检验要求进行检验，并出具检验报告。<br>
                            3, GIQCI will conduct inspection according to requirements as stated in the Application Form. GIQCI will issue an inspection report accordingly.
                        </p>
                        <p>
                            四、委托方必须注明要求使用的检验方法，如果没有明确要求，将按检验方自行选择检验的方法。<br>
                            4, The inspection method(s) should be specified by the Client. when there is no specific inspection method(s) stated by the Client in the Application Form, GIQCI may choose a reasonable method(s) to complete the inspection.
                        </p>
                        <p>
                            五、检验方的检验时间根据检验内容而定，原则上以检验方公布的时间为准，特殊情况，双方协商确定，以双方接受为原则。<br>
                            5, How long to complete the inspection is dependent on its requirements on a case by case basis. GIQCI will determine the timing of inspection. For special needs, the timing of inspection shall be negotiated between GIQCI and the Client and be accepted by both parties.
                        </p>
                        <p>
                            六、检验方检验收费按有关规定计价。对于批量样品如需减免检验费用的，委托方应在委托时与检验方协商确定，并以检验方书面报价为准。要求加急服务的，需支付加急费。<br>
                            6, Inspection service fees will be charged according to GIQCI price list. Special discounted fee may be applied to bulk samples, in such case, it shall be negotiated and agreed by GIQCI and the Client. The acceptance of final quote on the special reduced fee provided by GIQCI is the legally binding fee payable. For express service, an additional charge will apply.
                        </p>
                        <p>
                            七、检验方接受委托方自送样品的检验，检验报告仅对样品负责。<br>
                            7, GIQCI may accept sample(s) delivered by the Client for testing, then the inspection report will contain a qualification stating that the report is only based on the sample(s) supplied by the Client.
                        </p>
                        <p>
                            八、检验方在接受委托时，须详细审核委托单内容。在确认委托方的委托及要求后，应通过在线确认申请，并安排检验员前往检验现场。<br>
                            8, Details on the Application Form shall be reviewed and verified by GIQCI, after confirmation those inspection requirements, GIQCI shall advice on-line the acceptance of the application, then GIQCI will arrange a inspector to conduct inspection at Client’s nominated site accordingly.
                        </p>
                        <p>
                            九、检验方的检验报告有固定的格式，并仅提供唯一正本。<br>
                            9, Only one (1) original report will be available, which is in GIQCI official format.
                        </p>
                        <p>
                            十、请确保上述资料填写正确，报告完成后如需修改报告内容，将收取报告修改费。<br>
                            10, Please ensure accurate information is provided in the Application Form. Revision fee will be charged for reissuance of the GIQCI report.
                        </p>
                        <p>
                            十一、委托方如对检验结果有异议的，须在一个月内凭检验证书原件向检验方要求复检， 检验方应在三日内给予答复。如同意复检，检验方应于十日内安排。<br>
                            11, In case of any disputes on inspection results, the Client may apply GIQCI for a review after receiving GIQCI original inspection report. GIQCI shall provide a response within three (3) business days. If GIQCI agrees to carry out a review, a new inspection shall be arranged within ten business (10) days after the response.
                        </p>
                        <p>
                            十二、复检结果维持原检验结果的，委托方须按规定向检验方支付复检费。复检结果确 认原检验结果有误的，检验方不再收取复检费。<br>
                            12, If the outcome remains unchanged, a review fee will be charged. Otherwise, no fee is applicable.
                        </p>
                        <p>
                            十三、委托方对复检结果仍有异议，双方协商不成时，应与检验方书面协议，委托仲裁 机构仲裁。<br>
                            13, When the Client disagrees with the review result and both parties can not reach an mutual agreement after negotiation, the Client shall make an application to arbitration.
                        </p>
                        <p>
                            十四、对各类证书相关内容，GIQCI全部按国际ISO/IEC17020操作规程和标准进行审核和依据国际ISO/IEC 17025检测机构的测试报告签发，GIQCI不因为其他不可抗力所造成的损失，承担任何法律或不承担任何连带法律责任。<br>
                            14, The inspection and the inspection report is conducted accordance with the international standard practice, ISO/IEC17020 and ISO/IEC17025. Accordingly, GIQCI is not responsible for all possible financial loss or other loss of the Client as a result of the issuance of its inspection report.
                        </p>
                        <p>
                            十五、委托方对本协议及委托单有不明之处，应在填写委托单时，向检验方工作人员咨询。协议自填单之日起生效。<br>
                            15, Please complete the application form carefully and include all relevant requirements. Assistance is available from GIQCI should you need help. The Agreement shall become effective after submission the Application Form.
                        </p>
                        <p>
                            十六、此表信息可能在实验室评审过程中被评审机构接触。<br>
                            16, Information of the Application Form may be reviewed by an accredit organization.
                        </p>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-4" ng-class="{'col-sm-offset-5':AppCache==null,'col-sm-offset-4':AppCache!=null}">
                    <button class="btn btn-default" ng-click="accept()">
                        <span class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span> @("i_accept_the_terms_of_the_contract".KeyToWord())
                    </button>
                    <button class="btn btn-success" ng-show="AppCache!=null" ng-click="RemoveAppCache(true)">
                        <span class="glyphicon glyphicon-level-up" aria-hidden="true"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@("read_the_temporary_application".KeyToWord())&nbsp;&nbsp;&nbsp;
                    </button>
                </div>
            </div>
        </form>
    </div>

    <div ng-show="appshow" id="appliction-form" style="display: none;">
        <div class="alert alert-success" role="alert" ng-show="resultMessage">
            <strong>@("information_prompt".KeyToWord())</strong>
            <p>{{resultMessage}}</p>
            <p>
                <a href="@LanCore.GetLanTypeUrl()/forms/app" target="_self">@("apply_again".KeyToWord())</a>
            </p>
        </div>

        <div ng-show="!resultMessage">
            <h1 id="h1">@("certificate_application_form".KeyToWord())</h1>
            @*<div class="has-error" ng-show="errors.length > 0">
                <ul class="help-block">
                    <li ng-repeat="err in errors">{{err}}</li>
                </ul>
            </div>*@
            <div role="alert" id="alertBox" class="alert alert-dismissible alert-{{alert.type}}" ng-repeat="alert in alerts">
                <button aria-label="Close" data-dismiss="alert" ng-click="alert.close()" class="close" type="button"><span aria-hidden="true">×</span></button>
                <span ng-bind="alert.msg"></span>
            </div>
            <div>
                <span class="input-require-color">&nbsp;&lowast;</span> @("an_asterisk_is_required".KeyToWord())
            </div>
            <form name="appForm" onkeydown="if(event.keyCode==13)return false;" class="form-horizontal" ng-submit="submit(appForm.$valid)"
                  method="POST" novalidate enctype="multipart/form-data" id="uploadForm" onsubmit="return CheckIsUpload();">
                <div class="form-group">

                    <label class="col-sm-2 control-label">@("certificate_category".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>

                    <div class="col-sm-10">
                        <div class="checkbox">
                            <label><input type="checkbox" name="Application.C101" ng-model="model.Application.C101" /> @("c101_cert".KeyToWord())</label>
                            <label><input type="checkbox" name="Application.C102" ng-model="model.Application.C102" ng-click="check_type_c102()" /> @("c102_cert".KeyToWord())</label>
                            <label><input type="checkbox" name="Application.C103" ng-model="model.Application.C103" /> @("c103_cert".KeyToWord())</label>
                        </div>
                    </div>
                </div>
                <div class="form-group" ng-show="model.Application.C103">
                    @*<input type="file" name="file" onchange="if ($(this).val() != '') {angular.element(this).scope().UploadExampleNew()}" />*@
                    <label class="col-sm-2 control-label">@("upload_sample_label_certificate".KeyToWord())</label>
                    <div class="col-sm-10">
                        <input type="file" name="file" onchange="if ($(this).val() != '') {angular.element(this).scope().UploadExample()}" accept="{{allowType}}" />
                        <div ng-repeat="item in model.Application.ExampleCertList | filter:listFilter">
                            <table class="table table-striped goodsItems">
                                <tr>
                                    <th>@("sample".KeyToWord()){{$index+1}}</th>
                                    <td>
                                        <button class="btn btn-default" ng-click="removeExample(item)">
                                            <span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span> @("delete".KeyToWord())
                                        </button>
                                    </td>
                                </tr>
                                <tr>
                                    <th>@("file".KeyToWord())</th>
                                    <td>
                                        <input ng-show="!item.CertFilePath" type="file" name="file{{$index}}" ng-model="item.CertFilePath" class="form-control autowidth-form-control" accept="{{allowType}}" />
                                        <a ng-show="item.CertFilePath" href="@LanCore.GetLanTypeUrl()/file/viewfile?fileFullPath={{item.CertFilePath}}" target="_blank">@("view_file".KeyToWord()){{$index+1}}</a>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="form-group">

                    <label class="col-sm-2 control-label">@("business_purpose".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>

                    <div class="col-sm-10">
                        <div class="radio">
                            <label><input type="radio" name="Application.TradeType" ng-model="model.Application.TradeType" value="4" /> @("general_trade".KeyToWord())</label>
                            <label><input type="radio" name="Application.TradeType" ng-model="model.Application.TradeType" value="1" /> @("electricity_trade".KeyToWord())</label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">@("enterprise_record_number".KeyToWord())<span>&nbsp;&nbsp;</span></label>
                    <div class="col-sm-10">
                        <p class="form-control-static">
                            <input type="hidden" name="Application.ApplicantCode" ng-model="model.Application.ApplicantCode" />{{model.Application.ApplicantCode}}
                        </p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">@("applicant".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>
                    <div class="col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="application-fullname">@("full_name".KeyToWord())</span>
                            <input type="text" maxlength="100" name="Application.Applicant" ng-model="model.Application.Applicant" class="form-control" placeholder="@("full_name".KeyToWord())" aria-describedby="application-fullname" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-sm-2 control-label"><span>&nbsp;&nbsp;</span></label>
                    <div class="col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="application-address">@("address".KeyToWord())</span>
                            <input type="text" maxlength="400" name="Application.ApplicantAddr" ng-model="model.Application.ApplicantAddr" class="form-control" placeholder="@("address".KeyToWord())" aria-describedby="application-address" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label"><span>&nbsp;&nbsp;</span></label>
                    <div class="col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="application-contact">@("contacts".KeyToWord())</span>
                            <input type="text" maxlength="100" name="Application.ApplicantContact" ng-model="model.Application.ApplicantContact" class="form-control" placeholder="@("contacts".KeyToWord())" aria-describedby="application-contact"/>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label"><span>&nbsp;&nbsp;</span></label>
                    <div class="col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="application-phone">@("contact_phone".KeyToWord())</span>
                            <input type="text" maxlength="100" name="Application.ApplicantPhone" ng-model="model.Application.ApplicantPhone" class="form-control" placeholder="@("contact_phone".KeyToWord())" aria-describedby="application-phone"/>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label"><span>&nbsp;&nbsp;</span></label>
                    <div class="col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="application-email">@("email".KeyToWord())</span>
                            <input type="text" maxlength="100" name="Application.ApplicantEmail" ng-model="model.Application.ApplicantEmail" class="form-control" placeholder="@("email".KeyToWord())" aria-describedby="application-email"/>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">@("exporter".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>

                    <div class="col-sm-6">
                        <select class="form-control" ng-change="selectExporter(Exporter)" ng-model="Exporter" ng-options="merchant.UserName for merchant in loadMerchantInfo">
                            <option value="">--@("please_select".KeyToWord())--</option>
                        </select>
                    </div>
                    <div class="col-sm-4">
                        <button class="btn btn-default" type="button" ng-click="merchantList()"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> @("add_or_manage".KeyToWord())</button>
                    </div>
                </div>
         <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="export-fullname">@("full_name".KeyToWord())</span>
                            <input type="text" maxlength="100" name="Application.Exporter" ng-model="model.Application.Exporter" class="form-control" placeholder="@("full_name".KeyToWord())" aria-describedby="export-fullname" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="export-address">@("address".KeyToWord())</span>
                            <input type="text" maxlength="400" name="Application.ExporterAddr" ng-model="model.Application.ExporterAddr" class="form-control" placeholder="@("address".KeyToWord())" aria-describedby="export-address" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="export-contact">@("contacts".KeyToWord())</span>
                            <input type="text" maxlength="100" name="Application.ExporterContact" ng-model="model.Application.ExporterContact" class="form-control" placeholder="@("contacts".KeyToWord())" aria-describedby="export-contact"/>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="export-phone">@("contact_phone".KeyToWord())</span>
                            <input type="text" maxlength="100" name="Application.ExporterPhone" ng-model="model.Application.ExporterPhone" class="form-control" placeholder="@("contact_phone".KeyToWord())" aria-describedby="export-phone"/>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label ng-if="model.Application.TradeType==4" class="col-sm-2 control-label">@("importer".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>
                    <label ng-if="model.Application.TradeType==1" class="col-sm-2 control-label">@("agent_importer".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>
                    <div class="col-sm-6">
                        <select class="form-control" ng-change="selectImporter(Importer)" ng-model="Importer" ng-options="merchant.UserName for merchant in loadMerchantInfo">
                            <option value="">--@("please_select".KeyToWord())--</option>
                        </select>
                    </div>
                    <div class="col-sm-4">
                        <button class="btn btn-default" type="button" ng-click="merchantList()"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> @("add_or_manage".KeyToWord())</button>
                    </div>
                </div>
                @*<div class="form-group">
                    <div class="col-sm-offset-2 col-sm-8">
                        <input type="text" maxlength="100" name="Application.Importer" ng-model="model.Application.Importer" class="form-control" placeholder="全称" />
                        <input type="text" maxlength="400" name="Application.ImporterAddr" ng-model="model.Application.ImporterAddr" class="form-control" placeholder="地址" />
                        <input type="text" maxlength="100" name="Application.ImporterContact" ng-model="model.Application.ImporterContact" class="form-control" placeholder="联系人" />
                        <input type="text" maxlength="100" name="Application.ImporterPhone" ng-model="model.Application.ImporterPhone" class="form-control" placeholder="联系电话" />
                    </div>
                </div>*@

                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="import-fullname">@("full_name".KeyToWord())</span>
                            <input type="text" maxlength="100" name="Application.Importer" ng-model="model.Application.Importer" class="form-control" placeholder="@("full_name".KeyToWord())" aria-describedby="import-fullname"/>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="import-address">@("address".KeyToWord())</span>
                            <input type="text" maxlength="400" name="Application.ImporterAddr" ng-model="model.Application.ImporterAddr" class="form-control" placeholder="@("address".KeyToWord())" aria-describedby="import-address"/>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="import-contact">@("contacts".KeyToWord())</span>
                            <input type="text" maxlength="100" name="Application.ImporterContact" ng-model="model.Application.ImporterContact" class="form-control" placeholder="@("contacts".KeyToWord())" aria-describedby="import-contact"/>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-8">
                        <div class="input-group">
                            <span class="input-group-addon custom-input-group" id="import-phone">@("contact_phone".KeyToWord())</span>
                            <input type="text" maxlength="100" name="Application.ImporterPhone" ng-model="model.Application.ImporterPhone" class="form-control" placeholder="@("contact_phone".KeyToWord())" aria-describedby="import-phone"/>
                        </div>
                    </div>
                </div>

                <!--商品资料-->
                <div class="form-group">
                    <label class="col-sm-2 control-label">@("commodity_information".KeyToWord())<span>&nbsp;&nbsp;</span></label>
                    <div class="col-sm-8">
                        <div ng-repeat="item in model.Application.ApplicationProducts | filter:listFilter" class="application-product-area">
                            <table class="table table-hover application-table-margin">
                                <colgroup>
                                    <col width="160" />
                                    <col width="215" />
                                    <col width="160" />
                                    <col width="215" />
                                </colgroup>
                                <tr class="application-table-head">
                                    <th>
                                        <p class="form-control-static">@("goods".KeyToWord()) {{$index+1}}</p>
                                    </th>
                                    <td>
                                        <button class="btn btn-default btn-sm" type="button" ng-click="removeitem(item)"><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span> @("delete".KeyToWord())</button>
                                    </td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>
                                        <p class="form-control-static">@("common_goods".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></p>
                                    </th>
                                    @*<td colspan="3">
                                        <div class="application-table-margin">
                                            <div class="col-sm-8">
                                                <p class="form-control-static" ng-if="isEdit&&item.HandlerType!=1">{{item.CiqCode?item.CiqCode:"-"}}</p>
                                                <select ajax-product class="form-control " ng-if="!isEdit||(isEdit&&item.HandlerType==1)" ng-change="selectProduct(select,item)" ng-model="select" style="width:100%;"></select>
                                                <input type="hidden" ng-model="item.CiqCode" />
                                            </div>
                                            <div class="col-sm-3">
                                                <a class="btn btn-default" data-toggle="modal" data-target="#form-product"><span class="glyphicon glyphicon-link" aria-hidden="true"></span>&nbsp;添加/管理</a>
                                            </div>
                                        </div>
                                    </td>*@

                                    @*<td colspan="2">
                                        <div class="application-custom-select">
                                            <p class="form-control-static break-word" ng-if="isEdit&&item.HandlerType!=1">{{item.CiqCode?item.CiqCode:"-"}}</p>
                                            <select ajax-product class="form-control" ng-if="!isEdit||(isEdit&&item.HandlerType==1)" ng-change="selectProduct(select,item)" ng-model="select" style="width:100%;"></select>
                                            <input type="hidden" ng-model="item.CiqCode" />
                                        </div>
                                    </td>*@

                                    <!--ng-change="selectProduct(select,item)" -->
                                    <td colspan="2">
                                        <div class="application-custom-select">
                                            <select ajax-product 
                                                    ajax-url="ports" 
                                                    class="form-control" 
                                                    ng-change="selectProduct(select,item)"
                                                    ng-model="select" 
                                                    style="width:100%;">
                                                <option value="">@("please_enter_the_keyword_to_search".KeyToWord())</option>
                                            </select>
                                        </div>
                                    </td>

                                    <td>
                                        <a class="btn btn-default" data-toggle="modal" data-target="#form-product"><span class="glyphicon glyphicon-link" aria-hidden="true"></span>&nbsp;@("add_or_manage".KeyToWord())</a>
                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <p class="form-control-static">@("name".KeyToWord())(@("english".KeyToWord()))</p>
                                    </th>
                                    <td>
                                        <span ng-show="!item.IsEditDescriptionEn">
                                            <p class="form-control-static break-word" ng-model="item.DescriptionEn">{{item.DescriptionEn}}</p>
                                        </span>
                                        <span ng-show="item.IsEditDescriptionEn">
                                            <input type="text" ng-model="item.DescriptionEn" class="form-control" maxlength="100" />
                                        </span>
                                    </td>
                                    <th>
                                        <p class="form-control-static">@("name".KeyToWord())(@("chinese".KeyToWord()))</p>
                                    </th>
                                    <td>
                                        <p class="form-control-static break-word" ng-model="item.Description">{{item.Description}}</p>
                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <p class="form-control-static">@("brand".KeyToWord())</p>
                                    </th>
                                    <td>
                                        <p class="form-control-static break-word" ng-model="item.Brand">{{item.Brand}}</p>

                                    </td>
                                    <th>
                                        <p class="form-control-static">@("package".KeyToWord())</p>
                                    </th>
                                    <td>
                                        <p class="form-control-static break-word" ng-model="item.Package">{{item.Package}}</p>

                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <p class="form-control-static">@("spec".KeyToWord())</p>
                                    </th>
                                    <td>
                                        <p class="form-control-static break-word" ng-model="item.Spec">{{item.Spec}}</p>
                                    </td>
                                    <th>
                                        <p class="form-control-static">@("country_of_origin".KeyToWord())</p>
                                    </th>
                                    <td>
                                        <p ajax-label ajax-url="countries" ng-model="item.ManufacturerCountry" class="form-control-static">{{item.ManufacturerCountry}}</p>
                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <p class="form-control-static">@("hs_code".KeyToWord())</p>
                                    </th>
                                    <td>
                                        <p ng-model="item.HSCode" class="form-control-static break-word">{{item.HSCode}}</p>
                                    </td>
                                    <th>
                                        <p class="form-control-static">@("manufacturer".KeyToWord())</p>
                                    </th>
                                    <td>

                                        <p class="form-control-static break-word" ng-model="item.Manufacturer">{{item.Manufacturer}}</p>

                                    </td>
                                </tr>
                                <tr ng-show="model.Application.C102">
                                    <th>
                                        <p class="form-control-static">@("quality_restriction".KeyToWord())</p>
                                    </th>
                                    <td>
                                        <div class="checkbox">
                                            <label><input type="checkbox" ng-model="item.C102" />@("is_check".KeyToWord())</label>
                                        </div>
                                    </td>
                                    <th>
                                        <p class="form-control-static" ng-show="item.C102">@("test_item".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></p>
                                    </th>
                                    <td>
                                        <span ng-show="item.C102"><input type="text" ng-model="item.C102Comment" class="form-control" maxlength="100" /></span>
                                    </td>
                                </tr>
                            </table>
                            <!--批次号&数量-->
                            <div>
                                <table class="table table-hover application-table-margin">
                                    <colgroup>
                                        <col width="160" />
                                        <col />
                                        <col />
                                        <col width="215"/>
                                    </colgroup>
                                    <tr>
                                        <th class="application-product-county">
                                            <p class="form-control-static">
                                                @("quantity".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span>
                                            </p>
                                        </th>
                                        <td colspan="2">
                                            <input type="tel" 
                                                   min="1"
                                                   ng-model="item.Quantity" 
                                                   class="form-control" 
                                                   placeholder="@("quantity".KeyToWord())" 
                                                   required
                                                   ucc-pattern="^\+?[1-9][0-9]*$"
                                                   ucc-pattern-message="@("wrong_number".KeyToWord())！"
                                                   submit-btn-id="applicationSubmit"/>
                                        </td>
                                        <td></td>
                                    </tr>
                                    <tr ng-repeat="batch in item.ProductItemList | filter:listFilter">
                                        <td>
                                            <div class="form-control-static">
                                                @("batch_number_or_shelf_life".KeyToWord()) {{$index+1}}<span class="input-require-color">&nbsp;&lowast;</span>
                                            </div>
                                        </td>
                                        <td colspan="2">
                                            <p ng-model="batch.BatchNo" class="form-control-static">{{batch.BatchNo}}</p>
                                        </td>
                                        <td><button class="btn btn-default btn-sm" type="button" ng-click="removeItemByBatchNo(batch)"><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span> @("delete".KeyToWord())</button></td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="form-control-static">
                                                <input type="radio" ng-model="batch.batchNoOrDate" id="batch_1_{{$index+1}}" checked /><label for="batch_1_{{$index+1}}">@("batch_number".KeyToWord())</label>
                                                <input type="radio" ng-model="batch.batchNoOrDate" value="1" id="batch_0_{{$index+1}}" /><label for="batch_0_{{$index+1}}">@("shelf_life".KeyToWord())</label>
                                                <span class="input-require-color">&nbsp;&lowast;</span>
                                            </div>
                                        </td>
                                        <td colspan="2">
                                            <input ng-show="(batch.batchNoOrDate==null)" 
                                                   type="text" 
                                                   ng-model="item.addItemByBatchNo.BatchNo" 
                                                   name="addItemByBatchNoString_{{$index}}"
                                                   class="form-control" 
                                                   placeholder="@("batch_number".KeyToWord())" 
                                                   maxlength="100"
                                                   ng-blur="addItemByBatchNo(item,$index)" />
                                            <input ng-show="(batch.batchNoOrDate==1)" 
                                                   ng-mouseover="addItemByBatchNoClickHandler($event,item,$index)" 
                                                   type="text" 
                                                   name="addItemByBatchNoDate_{{$index}}" 
                                                   readonly 
                                                   ng-model="item.addItemByBatchNo.BatchNo" 
                                                   class="form-control custom-datetimepicker batchNo-input" 
                                                   placeholder="@("shelf_life".KeyToWord())" />
                                        </td>
                                        <td>
                                            @*<button class="btn btn-default btn-sm" type="button" ng-click="addItemByBatchNo(item,$index)"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>&nbsp;添加</button>*@
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <!--end 批次号-->
                            <!--真知码-->
                            <div>
                                <table class="table table-hover ">
                                    <colgroup>
                                        <col width="160" />
                                        <col />
                                        <col />
                                        <col width="215" />
                                    </colgroup>
                                    <tr ng-if="(item.ApplicationZCodes|filter:listFilter).length">
                                        <th><p class="form-control-static">@("zcode".KeyToWord())</p></th>
                                        <th><p class="form-control-static">@("head_code".KeyToWord())</p></th>
                                        <th><p class="form-control-static">@("tail_code".KeyToWord())</p></th>
                                        <th><p class="form-control-static">@("operation".KeyToWord())</p></th>
                                    </tr>
                                    <tr ng-repeat="zcode in item.ApplicationZCodes | filter:listFilter" ng-dblclick="editZcodeItem(zcode)">
                                        <td>
                                            <p class="form-control-static">@("zcode".KeyToWord()) {{$index+1}}</p>
                                        </td>
                                        <td>
                                            <input ng-if="zcode.HtmlEdit==1"
                                                   type="text"
                                                   ng-model="zcode.ZCodeStart"
                                                   maxlength="16"
                                                   ucc-tip-direction="1"
                                                   class="form-control"
                                                   name="zCodeEditStart{{$index}}"
                                                   ucc-validate-func="validZcodeStart(zcode)"
                                                   submit-btn-id="applicationSubmit"
                                                   ng-blur="validZcodeItem(zcode)" />
                                            <p ng-if="zcode.HtmlEdit==0" ng-model="zcode.ZCodeStart" class="form-control-static">{{zcode.ZCodeStart}}</p>
                                        </td>
                                        <td>
                                            <input ng-if="zcode.HtmlEdit==1"
                                                   type="text"
                                                   ng-model="zcode.ZCodeEnd"
                                                   maxlength="16"
                                                   ucc-tip-direction="1"
                                                   class="form-control"
                                                   name="zCodeEditEnd{{$index}}"
                                                   ucc-validate-func="validZcodeEnd(zcode)"
                                                   submit-btn-id="applicationSubmit"
                                                   ng-blur="validZcodeItem(zcode)" />
                                            <p ng-if="zcode.HtmlEdit==0" ng-model="zcode.ZCodeEnd" class="form-control-static">{{zcode.ZCodeEnd}}</p>
                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <button ng-if="zcode.HtmlEdit==0" class="btn btn-default btn-sm" type="button" ng-click="editZcodeItem(zcode)"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span> @("edit".KeyToWord())</button>
                                                <button ng-if="zcode.HtmlEdit==1" class="btn btn-default btn-sm" type="button" ng-click="submitZcodeItem(zcode,$index)"><span class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span> @("confirm".KeyToWord())</button>
                                                <button class="btn btn-default btn-sm" type="button" ng-click="removeZcodeItem(zcode)"><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span> @("delete".KeyToWord())</button>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="form-control-static">
                                                <input type="radio" id="ZcodeItem_{{$index+1}}" checked /><label for="ZcodeItem_{{$index+1}}">@("zcode".KeyToWord())</label>
                                            </div>
                                        </td>
                                        <td>
                                            <!--ng-blur="validAddzcodeItem(item,$index)" ng-keyup="myKeyupStart($event,$index)" id="addZcodeItemZCodeStart_{{$index}}"-->
                                            <input type="text"
                                                   ng-model="item.addZcodeItem.ZCodeStart"
                                                   ucc-tip-direction="1"
                                                   ucc-validate-func="zCodeValidateStart(value,item,false,$index);"
                                                   class="form-control"
                                                   maxlength="16"
                                                   submit-btn-id="applicationSubmit"
                                                   placeholder="@("head_code".KeyToWord())"
                                                   ng-blur="zcodeBlurStart($event)"
                                                   ng-keyup="myKeyupStart($event,$index)"
                                                   name="zCodeStart{{$index}}" />
                                        </td>
                                        <td>
                                            <!--title="请输入16位尾码" ng-blur="validAddzcodeItem(item,$index)" ng-keyup="myKeyupEnd($event,item,$index)" id="addZcodeItemZCodeEnd_{{$index}}"-->
                                            <input type="text"
                                                   ng-model="item.addZcodeItem.ZCodeEnd"
                                                   ucc-tip-direction="1"
                                                   ucc-validate-func="zCodeValidateEnd(value,item,false,$index)"
                                                   class="form-control"
                                                   maxlength="16"
                                                   submit-btn-id="applicationSubmit"
                                                   placeholder="@("tail_code".KeyToWord())"
                                                   ng-blur="zcodeBlurEnd($event)"
                                                   ng-keyup="myKeyupEnd($event,item,$index)"
                                                   name="zCodeEnd{{$index}}" />
                                        </td>
                                        <!--暂时去掉真知码的添加按钮-->
                                        <td>
                                            @*<button class="btn btn-default btn-sm" type="button" ng-click="validAddzcodeItem(item,$index)"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> 添加</button>*@
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <!--end真知码-->
                        </div>
                        <div class="">
                            <button class="btn btn-default" type="button" ng-click="additem()"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> @("add_product".KeyToWord())</button>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">@("type_of_shipping".KeyToWord())<span>&nbsp;&nbsp;</span></label>
                    <div class="col-sm-10">
                        <div class="radio">
                            <label><input type="radio" ng-model="model.Application.ShippingMethod" value="1" />@("air_transport".KeyToWord())</label>
                            <label><input type="radio" ng-model="model.Application.ShippingMethod" value="2" />@("ocean_shipping".KeyToWord())</label>
                            <label><input type="radio" ng-model="model.Application.ShippingMethod" value="3" />@("land_transportation".KeyToWord())</label>
                        </div>
                    </div>
                </div>
                <div class="form-group" ng-show="model.Application.ShippingMethod == 2">
                    <label class="col-sm-2 control-label">@("ship_information".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>
                    <div class="col-sm-8">
                        <div ng-repeat="item in model.Application.ContainerInfos | filter:listFilter">
                            <table class="table table-striped goodsItems">
                                <colgroup>
                                    <col width="120" />
                                    <col width="360" />
                                    <col width="120" />
                                    <col width="360" />
                                </colgroup>
                                <tr>
                                    <th>
                                        <p class="form-control-static">@("packing_information".KeyToWord()) {{$index+1}}</p>
                                    </th>
                                    <td colspan="3">
                                        <button class="btn btn-default" type="button" ng-click="removeContainerInfo(item)"><span class="glyphicon glyphicon-minus-sign" aria-hidden="true"></span> @("delete".KeyToWord())</button>
                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <p class="form-control-static">@("packing_number".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></p>
                                    </th>
                                    <td>
                                        <p class="form-control-static" ng-if="item.HandlerType==0" ng-model="item.ContainerNumber">{{item.ContainerNumber}}</p>
                                        <input type="text" ng-if="item.HandlerType==1" ng-model="item.ContainerNumber" class="form-control" placeholder="@("packing_number".KeyToWord())" />
                                    </td>
                                    <th>
                                        <p class="form-control-static">@("seal_no".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></p>
                                    </th>
                                    <td>
                                        <p class="form-control-static" ng-if="item.HandlerType==0" ng-model="item.SealNumber">{{item.SealNumber}}</p>
                                        <input type="text" ng-if="item.HandlerType==1" ng-model="item.SealNumber" class="form-control" placeholder="@("seal_no".KeyToWord())" />
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <button class="btn btn-default" type="button" ng-click="addContainerInfo()"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> @("add_packing_information".KeyToWord())</button>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">
                        @("bill_of_lading_no".KeyToWord())<span>&nbsp;&nbsp;</span>
                    </label>
                    <div class="col-sm-8">
                        <input type="text" 
                               ng-model="model.Application.BillNo" 
                               class="form-control" 
                               placeholder="@("bill_of_lading_no".KeyToWord())" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">
                        @("second_bill_of_lading_no".KeyToWord())<span>&nbsp;&nbsp;</span>
                    </label>
                    <div class="col-sm-8">
                        <input type="text" ng-model="model.Application.OtherBillNo" class="form-control" placeholder="@("second_bill_of_lading_no".KeyToWord())" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">
                        <p ng-if="model.Application.ShippingMethod == 1">@("flight_number".KeyToWord())<span>&nbsp;&nbsp;</span></p>
                        <p ng-if="model.Application.ShippingMethod == 2">@("ship_number".KeyToWord())<span>&nbsp;&nbsp;</span></p>
                        <p ng-if="model.Application.ShippingMethod == 3">@("license_plate_number".KeyToWord())<span>&nbsp;&nbsp;</span></p>
                    </label>
                    <div class="col-sm-8">
                        <input type="text" 
                               ng-if="model.Application.ShippingMethod == 1" 
                               ng-model="model.Application.Vesselcn" 
                               class="form-control" 
                               placeholder="@("flight_number".KeyToWord())" />
                        <input type="text" 
                               ng-if="model.Application.ShippingMethod == 2" 
                               ng-model="model.Application.Vesselcn" 
                               class="form-control" 
                               placeholder="@("ship_number".KeyToWord())" />
                        <input type="text" 
                               ng-if="model.Application.ShippingMethod == 3" 
                               ng-model="model.Application.Vesselcn" 
                               class="form-control" 
                               placeholder="@("license_plate_number".KeyToWord())" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">@("departure_date".KeyToWord())<span>&nbsp;&nbsp;</span></label>
                    <div class="col-sm-8">
                        <input type="text" ng-model="model.Application.Voyage" readonly class="form-control datetimepicker batchNo-input" placeholder="@("departure_date".KeyToWord())" />
                    </div>
                </div>
                <div class="form-group" ng-show="model.Application.ShippingMethod != 2">
                    <label class="col-sm-2 control-label">@("total_transport_volume".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>
                    <div class="col-sm-6">
                        <input type="tel" 
                               ng-model="model.Application.TotalUnits" 
                               class="form-control" 
                               min="0" 
                               placeholder="@("total_transport_volume".KeyToWord())"
                                />
                        <!--海运没有运输总数量，添加提示会有bug，这里去掉验证提示-->
                        <!--submit-btn-id="applicationSubmit" ucc-pattern="^\+?[1-9][0-9]*$" ucc-pattern-message="请填写正确的运输总数量！" required-->
                    </div>
                    <div class="col-sm-4">
                        <p class="form-control-static">Pallet(s)</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">@("total_weight_of_transport".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>

                    <div class="col-sm-6">
                        <input type="tel" 
                               ng-model="model.Application.TotalWeight" 
                               class="form-control" 
                               min="0" 
                               placeholder="@("total_weight_of_transport".KeyToWord())"
                               ucc-pattern="^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$"
                               ucc-pattern-message="@("wrong_total_weight_of_transport".KeyToWord())！"
                               submit-btn-id="applicationSubmit"
                               required />
                    </div>
                    <div class="col-sm-4">
                        <p class="form-control-static">KG</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">@("planned_delivery_date".KeyToWord())<span>&nbsp;&nbsp;</span></label>
                    <div class="col-sm-8">
                        <input type="text" ng-model="model.Application.ShippingDate" readonly class="form-control datetimepicker batchNo-input" placeholder="@("planned_delivery_date".KeyToWord())" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">@("date_of_appointment".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>

                    <div class="col-sm-8">
                        <input type="text" ng-model="model.Application.InspectionDate" readonly class="form-control datetimepicker batchNo-input" placeholder="@("date_of_appointment".KeyToWord()) " />
                    </div>
                </div>
                <div class="form-group">

                    <label class="col-sm-2 control-label">@("inspection_site".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>

                    <div class="col-sm-8">
                        <input type="text" 
                               ng-model="model.Application.InspectionAddr" 
                               class="form-control" 
                               placeholder="@("inspection_site".KeyToWord())"
                               required
                               ucc-require="@("inspection_site_can_not_be_empty".KeyToWord())"
                               submit-btn-id="applicationSubmit" />
                    </div>
                </div>
                <div class="form-group">

                    <label class="col-sm-2 control-label">@("contacts".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>

                    <div class="col-sm-8">
                        <input type="text" 
                               ng-model="model.Application.Inspector" 
                               class="form-control" 
                               placeholder="@("contacts".KeyToWord())" 
                               maxlength="100"
                               required
                               ucc-max-length="100"
                               ucc-require="@("contact_cannot_be_empty".KeyToWord())"
                               submit-btn-id="applicationSubmit" />
                    </div>
                </div>
                <div class="form-group">

                    <label class="col-sm-2 control-label">@("contact_phone".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>

                    <div class="col-sm-8">
                        <input type="text" 
                               ng-model="model.Application.InspectorTel" 
                               class="form-control" 
                               placeholder="@("contact_phone".KeyToWord())"
                               required
                               ucc-require="@("contact_phone_can_not_be_empty".KeyToWord())"
                               submit-btn-id="applicationSubmit" />
                    </div>
                </div>
                <div class="form-group">

                    <label class="col-sm-2 control-label">@("port_of_shipment".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>

                    <div class="col-sm-8">
                        <select ajax-select ajax-url="ports" ng-model="model.Application.LoadingPort" class="form-control selectLoadingPort" style="width: 100%">
                            <option value="">&lt; - @("please_select_a_port".KeyToWord()) - &gt;</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">

                    <label class="col-sm-2 control-label">@("port_of_destination".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>

                    <div class="col-sm-8">
                        <select ajax-select ajax-url="ports" ng-model="model.Application.DestPort" class="form-control selectDestPorts" style="width: 100%">
                            <option value="">&lt; - @("other_ports".KeyToWord())其他港口 - &gt;</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-8">
                        <button class="btn btn-default" type="submit" id="applicationSubmit" ng-disabled="submitApp">
                            <span class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span> @("submit".KeyToWord())
                        </button>

                        <button ng-show="isNewApp" type="button" ng-disabled="isSaveingCache" class="btn btn-info" ng-click="SaveAppCache()">
                            <span class="glyphicon glyphicon-save" aria-hidden="true"></span> @("temporary_storage".KeyToWord())
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <!--login modal-->
    <div class="modal" role="dialog" aria-labelledby="gridSystemModalLabel" id="form-login">
        <div class="modal-dialog" role="document">
            <form name="appform" class="form-horizontal" method="POST">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h5 class="modal-title" id="gridSystemModalLabel">@("user_login".KeyToWord())</h5>
                    </div>
                    <div class="modal-body">
                        <div class="form-group has-error" ng-show="!login.result">
                            <p class="col-sm-offset-2 col-sm-8 help-block">{{login.error}}</p>
                        </div>
                        <div class="form-group" ng-class="{ 'has-error' : (appform.email.$invalid && appform.email.$dirty) || user.email=='' }">

                            <label class="col-sm-2 control-label">@("email".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span>: </label>

                            <div class="col-sm-8">
                                <input name="email" type="email" class="form-control" required ng-model="user.email" />
                                <small ng-show="appform.email.$invalid" class="help-block">@("not_correct_email_msg".KeyToWord())</small>
                            </div>
                        </div>
                        <div class="form-group" ng-class="{ 'has-error' : (appform.password.$error.required && !appform.password.$pristine) || user.password=='' }">

                            <label class="col-sm-2 control-label">@("password".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span>: </label>

                            <div class="col-sm-8">
                                <input name="password" type="password" class="form-control" required ng-model="user.password" />
                                <small ng-show="appform.password.$error.required" class="help-block">@("please_enter_your_password".KeyToWord())</small>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">@("close".KeyToWord())</button>
                        <button type="button" class="btn btn-primary" ng-click="submitLoginForm()"><span class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span> @("login".KeyToWord())</button>
                    </div>
                </div><!-- /.modal-content -->
            </form>
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!--product list modal-->
    <div class="modal" role="dialog" data-backdrop="static" data-keyboard="false" id="form-product">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@("list_of_goods".KeyToWord())</h5>
                </div>
                <div class="modal-body giqci-modal-dialog">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a href="#ciqProduct" data-toggle="tab">@("record_commodity".KeyToWord())</a>
                        </li>
                        <li>
                            <a href="#custProduct" data-toggle="tab">@("customer_goods".KeyToWord())</a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div role="tabpanel" class="form-horizontal tab-pane fade in active panel-body" id="ciqProduct">
                            <div class="form-group">
                                <table class="table table-striped table-layout-fixed">
                                    <colgroup>
                                        <col width='180' />
                                        <col />
                                        <col />
                                        <col width='100' />
                                        <col width='80' />
                                    </colgroup>
                                    <thead>
                                        <tr>
                                            <th>
                                                <span style="color: green">@("commodity_record_number".KeyToWord())</span>
                                            </th>
                                            <th>@("name".KeyToWord())(@("chinese".KeyToWord()))</th>
                                            <th>@("name".KeyToWord())(@("english".KeyToWord()))</th>
                                            <th>@("spec".KeyToWord())</th>
                                            <th>@("operation".KeyToWord())</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr ng-repeat="Product in merchantProductList">
                                            <td class="td-ellipsis" style="color: green" title="{{Product.CiqCode}}">{{Product.CiqCode}}</td>
                                            <td class="td-ellipsis" title="{{Product.Description}}">{{Product.Description}}</td>
                                            <td class="td-ellipsis" title="{{Product.DescriptionEn}}">{{Product.DescriptionEn}}</td>
                                            <td class="td-ellipsis" title="{{Product.Spec}}">{{Product.Spec}}</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button type="button" class="btn btn-danger btn-sm" ng-click="removeMerchantProductCiq(Product.CiqCode,$index)">@("delete".KeyToWord())</button>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div role="tabpanel" class="form-horizontal tab-pane fade panel-body" id="custProduct">
                            <div class="form-group">
                                <table class="table table-striped table-layout-fixed">
                                    <colgroup>
                                        <col width='180' />
                                        <col />
                                        <col />
                                        <col width='100' />
                                        <col width='200' />
                                    </colgroup>
                                    <thead>
                                        <tr>
                                            <th>
                                                <span style="color: orangered">@("customizes_identity".KeyToWord())</span>
                                            </th>
                                            <th>@("name".KeyToWord())(@("chinese".KeyToWord()))</th>
                                            <th>@("name".KeyToWord())(@("english".KeyToWord()))</th>
                                            <th>@("spec".KeyToWord())</th>
                                            <th>@("operation".KeyToWord())</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr ng-repeat="Product in customProductList">
                                            <td class="td-ellipsis" style="color: orangered" title="{{Product.Key}}">{{Product.Key}}</td>
                                            <td class="td-ellipsis" title="{{Product.Description}}">{{Product.Description}}</td>
                                            <td class="td-ellipsis" title="{{Product.DescriptionEn}}">{{Product.DescriptionEn}}</td>
                                            <td class="td-ellipsis" title="{{Product.Spec}}">{{Product.Spec}}</td>
                                            <td>
                                                <div class="btn-group pull-right" role="group">
                                                    <button ng-if="!Product.IsApproved" class="btn btn-default btn-sm" ng-click="editMerchantProduct(Product)">@("edit".KeyToWord())</button>
                                                    <button type="button" class="btn btn-primary btn-sm" ng-click="changeMerchantProduct($index)">@("transferred_to_the_record_commodity".KeyToWord())</button>
                                                    <button type="button" class="btn btn-danger btn-sm" ng-click="removeMerchantProductId(Product.Key,$index)">@("delete".KeyToWord())</button>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" ng-click="addGoodsProduct()"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> @("add_record_merchandise".KeyToWord())</button>
                    <button type="button" class="btn btn-default" ng-click="addCustomProduct()"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> @("add_customer_goods".KeyToWord())</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">@("close".KeyToWord())</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!--custom product add modal-->
    @Html.Partial("PopUp/ChangeProduct")
    @Html.Partial("PopUp/EditProduct")
    <!--goods product add modal-->
    <div class="modal" role="dialog" data-backdrop="static" data-keyboard="false" id="form-add-goods-product">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@("add_record_merchandise".KeyToWord())</h5>
                </div>
                <div class="modal-body">
                    @*<div role="alert" class="alert alert-dismissible alert-{{alert.type}}" ng-repeat="alert in alerts">
                        <button aria-label="Close" data-dismiss="alert" ng-click="alert.close()" class="close" type="button"><span aria-hidden="true">×</span></button>
                        <span ng-bind="alert.msg"></span>
                    </div>*@
                    <form name="addGoodForm" class="form-horizontal" novalidate>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@("commodity_record_number".KeyToWord())</label>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <input type="text" 
                                           placeholder="@("please_enter_a_complete_commodity_record_number".KeyToWord())" 
                                           ng-model="DialogProductCiqCode" 
                                           class="form-control"
                                           required
                                           ucc-pattern="^((\d{10})|(ICIP\d{14}))$"
                                           ucc-tip-direction="3" 
                                           submit-btn-id="searchButtonApp"
                                           ucc-pattern-message="@("commodity_record_number_prompt_msg".KeyToWord())！" />
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" 
                                                id="searchButtonApp" 
                                                ng-click="getDialogProductList(addGoodForm.$valid)"
                                                ng-disabled="alreadySearchApp">
                                            <span class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span> @("search".KeyToWord())
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div ng-show="dialogProductList!=null">
                            <table class="table table-striped table-layout-fixed">
                                <colgroup>
                                    <col width='180' />
                                    <col />
                                    <col />
                                    <col width='80' />
                                    <col width='80' />
                                </colgroup>
                                <thead>
                                    <tr>
                                        <th>@("commodity_record_number".KeyToWord())</th>
                                        <th>@("name".KeyToWord())(@("chinese".KeyToWord()))</th>
                                        <th>@("name".KeyToWord())(@("english".KeyToWord()))</th>
                                        <th>@("spec".KeyToWord())</th>
                                        <th>@("operation".KeyToWord())</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="td-ellipsis" title="{{dialogProductList.CiqCode}}">{{dialogProductList.CiqCode}}</td>
                                        <td class="td-ellipsis" title="{{dialogProductList.Description}}">{{dialogProductList.Description}}</td>
                                        <td class="td-ellipsis" title="{{dialogProductList.DescriptionEn}}">{{dialogProductList.DescriptionEn}}</td>
                                        <td class="td-ellipsis" title="{{dialogProductList.Spec}}">{{dialogProductList.Spec}}</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-primary btn-sm" ng-click="addDialogGoodsProduct()">@("add".KeyToWord())</button>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="searchButtonApp" ng-click="showProductList()"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span> @("go_back".KeyToWord())</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!--merchant list modal-->
    <div class="modal" role="dialog" data-backdrop="static" data-keyboard="false" id="form-merchant-list">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@("common_business_management".KeyToWord())</h5>
                </div>
                <div class="modal-body giqci-modal-dialog">
                    <table class="table table-striped table-layout-fixed">
                        <colgroup>
                            <col />
                            <col />
                            <col width='140' />
                            <col width='120' />
                            <col width='140' />
                        </colgroup>
                        <thead>
                            <tr>
                                <th>@("full_name".KeyToWord())</th>
                                <th>@("address".KeyToWord())</th>
                                <th>@("contacts".KeyToWord())</th>
                                <th>@("contact_number".KeyToWord())</th>
                                <th>@("operation".KeyToWord())</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="merchant in loadMerchantInfo">
                                <td class="td-ellipsis" title="{{merchant.UserName}}">{{merchant.UserName}}</td>
                                <td class="td-ellipsis" title="{{merchant.UserAddress}}">{{merchant.UserAddress}}</td>
                                <td class="td-ellipsis" title="{{merchant.UserContact}}">{{merchant.UserContact}}</td>
                                <td class="td-ellipsis" title="{{merchant.UserPhone}}">{{merchant.UserPhone}}</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-primary btn-sm" ng-click="editMerchant(merchant.Id)">@("edit".KeyToWord())</button>
                                        <button type="button" class="btn btn-danger btn-sm" ng-click="removeMerchant(merchant)">@("delete".KeyToWord())</button>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" ng-click="addMerchant()"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> @("add_common_merchant_information".KeyToWord())</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">@("close".KeyToWord())</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!-- merchant edit modal-->
    <div class="modal" role="dialog" data-backdrop="static" data-keyboard="false" id="merchant-add-form">
        <div class="modal-dialog modal-lg">
            <form class="modal-content" name="merchantForm" ng-submit="submitAddMerchant(merchantForm.$valid)" novalidate>
                <div class="modal-header">
                    <h5 class="modal-title merchant-add-title">@("add_common_merchant_information".KeyToWord())</h5>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        @*<div role="alert" class="alert alert-dismissible alert-{{alert.type}}" ng-repeat="alert in alerts">
                                <button aria-label="Close" data-dismiss="alert" ng-click="alert.close()" class="close" type="button"><span aria-hidden="true">×</span></button>
                                <span ng-bind="alert.msg"></span>
                            </div>*@
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@("full_name".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>
                            <div class="col-sm-8">
                                <input type="text" ng-model="dialogModelMerchant.UserName" class="form-control"
                                       ucc-max-length="100" ucc-min-length="1" submit-btn-id="merchantSubmit" required />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@("address".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>
                            <div class="col-sm-8">
                                <input type="text" ng-model="dialogModelMerchant.UserAddress" class="form-control"
                                       ucc-max-length="400" ucc-min-length="1" submit-btn-id="merchantSubmit" required />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@("contacts".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>
                            <div class="col-sm-8">
                                <input type="text" ng-model="dialogModelMerchant.UserContact" class="form-control"
                                       ucc-max-legth="100" ucc-min-length="1" submit-btn-id="merchantSubmit" required />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@("contact_number".KeyToWord())<span class="input-require-color">&nbsp;&lowast;</span></label>
                            <div class="col-sm-8">
                                <input type="text" ng-model="dialogModelMerchant.UserPhone" class="form-control"
                                       ucc-max-length="100" ucc-min-length="1" submit-btn-id="merchantSubmit" required />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                <input type="hidden" ng-model="dialogModelMerchant.Id" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default" type="submit" id="merchantSubmit" ng-disabled="MerchantHasSaved">
                        <span class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span> @("submit".KeyToWord())
                    </button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">@("close".KeyToWord())</button>
                </div>
            </form><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
</div>